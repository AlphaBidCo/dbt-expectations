version: 2
models:
  - name: timeseries_data
    # tests:
    #     - dbt_expectations.expect_table_columns_to_match_ordered_list:
    #         ordered_column_list: ["date_day", "row_value", "row_value_log"]
    columns:
      - name: date_day
        tests:
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: day
              interval: 1
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: date
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list: [date, datetime]
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: date_day
      - name: row_value
        tests:
          - dbt_expectations.expect_column_values_to_be_within_n_stdevs:
              sigma_threshold: 6
          - dbt_expectations.expect_column_values_to_be_within_n_moving_stdevs:
              group_by: date_day
              sigma_threshold: 6
              take_logs: true
      - name: row_value_log
        tests:
          - dbt_expectations.expect_column_values_to_be_within_n_moving_stdevs:
              group_by: date_day
              sigma_threshold: 6
              take_logs: false


seeds:
  - name: data_test
    tests:
        - dbt_expectations.expect_compound_columns_to_be_unique:
            column_list: ["date_col", "col_string_b"]
            ignore_row_if: "any_value_is_missing"
        - dbt_expectations.expect_table_row_count_to_equal:
            expected_number_of_rows: 4
        - dbt_expectations.expect_table_row_count_to_be_between:
            minimum: 1
            maximum: 4
        - dbt_expectations.expect_table_row_count_to_equal_other_table:
            compare_model: ref("data_test")
        - dbt_expectations.expect_table_column_count_to_equal:
            expected_number_of_columns: 7
        - dbt_expectations.expect_table_column_count_to_be_between:
            minimum: 1
            maximum: 10
        - dbt_expectations.expect_table_columns_to_contain_set:
            column_list: ["col_numeric_b", "col_string_a"]
        - dbt_expectations.expect_table_columns_to_match_set:
            column_list: ["idx", "date_col", "col_numeric_a", "col_numeric_b", "col_string_a", "col_string_b", "col_null"]
        - dbt_expectations.expect_table_columns_to_match_ordered_list:
            ordered_column_list: ["idx", "date_col", "col_numeric_a", "col_numeric_b", "col_string_a", "col_string_b", "col_null"]
        - dbt_expectations.expect_table_column_count_to_equal_other_table   :
            compare_model: ref("data_test")
        - dbt_expectations.expression_is_true:
            expression: (col_numeric_a + col_numeric_b = 1)
        - dbt_expectations.equal_expression:
            expression: sum(col_numeric_a)
            compare_model: ref("data_test")
            group_by: [idx]
        - dbt_expectations.expect_column_pair_values_to_be_in_set:
            column_A: col_numeric_a
            column_B: col_numeric_b
            value_pairs_set: [[0, 1], [1, 0], [0.5, 0.5], [0.5, 0.5]]
        - dbt_expectations.equal_expression:
            expression: sum(col_numeric_a)
            compare_model: ref("data_test")
            compare_expression: sum(col_numeric_b)
        - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
            column_A: col_numeric_a+10
            column_B: col_numeric_a
        - dbt_expectations.expect_column_pair_values_A_to_be_greater_than_B:
            column_A: col_numeric_a
            column_B: col_numeric_a
            or_equal: True
        - dbt_expectations.expect_column_pair_values_to_be_equal:
            column_A: col_numeric_a
            column_B: col_numeric_a
        - dbt_expectations.expect_select_column_values_to_be_unique_within_record:
            column_list: ["col_string_a", "col_string_b"]
            ignore_row_if: "any_value_is_missing"
        - dbt_expectations.expect_multicolumn_sum_to_equal:
            column_list: ["col_numeric_a", "col_numeric_b"]
            sum_total: 4


            
    columns:
      - name: idx
        tests:
          - dbt_expectations.expect_column_to_exist:
              column_index: 1
          - dbt_expectations.expect_column_values_to_be_unique
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: idx

      - name: col_numeric_a
        tests:
          - dbt_expectations.expect_column_to_exist
          - dbt_expectations.expect_column_to_exist:
              column_index: 3
          - dbt_expectations.expect_column_values_to_not_be_null
          - dbt_expectations.expect_column_values_to_be_between:
              minimum: 0
              maximum: 1
          - dbt_expectations.expect_column_sum_to_be_between:
              minimum: 1
              maximum: 3
          - dbt_expectations.expect_column_min_to_be_between:
              minimum: 0
              maximum: 0
          - dbt_expectations.expect_column_max_to_be_between:
              minimum: 1
              maximum: 1
          - dbt_expectations.expect_column_mean_to_be_between:
              minimum: 0
              maximum: 1.5
          - dbt_expectations.expect_column_unique_value_count_to_be_between:
              minimum: 3
              maximum: 3
          - dbt_expectations.expect_column_proportion_of_unique_values_to_be_between:
              minimum: 0
              maximum: .75
          - dbt_expectations.expect_column_stdev_to_be_between:
              minimum: 0
              maximum: 2
          - dbt_expectations.expect_column_most_common_value_to_be_in_set:
              values: [0.5]
              top_n: 1
          - dbt_expectations.expect_column_values_to_be_increasing:
              sort_column: col_numeric_a
              strictly: false


      - name: col_string_a
        tests:
          - dbt_expectations.expect_column_values_to_not_be_in_set:
              values: ['2','3']
              quote_values: true
          - dbt_expectations.expect_column_distinct_values_to_equal_set:
              values: ['a','b','c','c']
              quote_values: true
          - dbt_expectations.expect_column_distinct_values_to_be_in_set:
              values: ['a','b','c','d']
              quote_values: true
          - dbt_expectations.expect_column_distinct_values_to_contain_set:
              values: ['a','b']
              quote_values: true

          - dbt_expectations.expect_column_value_lengths_to_equal   :
              length: 1

      - name: col_string_b
        tests:
          - dbt_expectations.expect_column_values_to_not_be_in_set:
              values: ['a','c']
              quote_values: true
          - dbt_expectations.expect_column_value_lengths_to_be_between:
              minimum_length: 1
              maximum_length: 4

      - name: col_null
        tests:
          - dbt_expectations.expect_column_values_to_be_null
